package softwarehuset;

import java.util.ArrayList;
import java.util.List;

public class ProjektLeder extends Medarbejder {

	String ProjektNavn;
	public static List<Medarbejder> LedigMedarbejderListe = new ArrayList<Medarbejder>();
	public List<Aktivitet> AktiveAktiviteter = new ArrayList<Aktivitet>();

	public ProjektLeder(String Navn, String ID) {
		super(Navn, ID);

	}

	public String getProjektNavn() {
		return ProjektNavn;
	}

	public List<Medarbejder> LedigeMedarbejder() {
		for (int i = 0; i < Softwarehuset.MedarbejderListe.size(); i++) {
			if (Softwarehuset.MedarbejderListe.get(i).AntalAktiviteter.size() < 20) {
				LedigMedarbejderListe.add(Softwarehuset.MedarbejderListe.get(i));
			}
		}
		return LedigMedarbejderListe;
	}

	public void OpretAktivitet(Aktivitet aktivitet, Projekt projekt) {
		this.AktiveAktiviteter.add(aktivitet);
		for (int i=0; i < Softwarehuset.ProjektListe.size(); i++){
			if(Softwarehuset.ProjektListe.get(i).Navn == projekt.Navn){
				Softwarehuset.ProjektListe.get(i).TilknyttedeAktiviteter.add(aktivitet);
				break;
			}
		}
	}

	public void UddelAktivitet(String ID, Aktivitet aktivitet) {
		for (int j = 0; j < LedigMedarbejderListe.size(); j++) {
			if (LedigMedarbejderListe.get(j).ID == ID) {
				LedigMedarbejderListe.get(j).AntalAktiviteter.add(aktivitet); // tilfÃ¸jer aktivitet til et array tilknyttet hver medarbejder
				break;
			}
		}
	}

	public void seStatusProjekt(Projekt projekt) {
		int arb = 0;
		int forv = 0;
		for (int i = 0; i < projekt.TilknyttedeAktiviteter.size(); i++){
			arb = arb + projekt.TilknyttedeAktiviteter.get(i).antalArbejdstimer;
			forv = forv + projekt.TilknyttedeAktiviteter.get(i).forventedeArbejdsTimer;
		}
		int statusTimer = forv-arb;
		int statusProcent = (arb/forv)*100;
		System.out.println("Forventede resterende arbjedstimer: "+statusTimer);
		//System.out.println("Procentvise gennemarbejdelse: "+statusProcent+"%");
		
		
	}

	public void seStatusAktivitet() {

	}
}
